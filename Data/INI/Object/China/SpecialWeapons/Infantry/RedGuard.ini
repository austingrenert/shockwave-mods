Object Spec_ChinaInfantryRedguard

  ; *** ART Parameters ***
  SelectPortrait         = SNMGRedGuard_L  
  ButtonImage            = SNMGRedGuard
  
  UpgradeCameo1 = Upgrade_Nationalism
  UpgradeCameo2 = Upgrade_InfantryCaptureBuilding
  ;UpgradeCameo3 = NONE
  ;UpgradeCameo4 = NONE
  ;UpgradeCameo5 = NONE

  Draw = W3DModelDraw ModuleTag_01

    OkToChangeModelColor = Yes

    ; this says "we don't use these condition states at all, so completely
    ; ignore them for purposes of matchmaking"... this is useful to help
    ; reduce the number of AliasConditionState clauses you must add in
    ; order to avoid ambiguity in some cases.
    IgnoreConditionStates = PREATTACK_A FIRING_A BETWEEN_FIRING_SHOTS_A RELOADING_A

    ; ------- Standing-Around Animations
 
    DefaultConditionState
      Model               = NICNSCSWG_SKN
      IdleAnimation       = NICNSCI_SKL.NICNSCI_STA 0 35
      IdleAnimation       = NICNSCI_SKL.NICNSCI_IDA
      IdleAnimation       = NICNSCI_SKL.NICNSCI_IDB
      AnimationMode       = ONCE
      WeaponFireFXBone    = PRIMARY Muzzle
      WeaponMuzzleFlash   = PRIMARY MuzzleFX
      WeaponFireFXBone    = SECONDARY Muzzle
      WeaponMuzzleFlash   = SECONDARY MuzzleFX
      TransitionKey       = TRANS_Stand
      WaitForStateToFinishIfPossible = Trans_Taunting
    End

    ConditionState        = REALLYDAMAGED
      IdleAnimation       = NICNSCI_SKL.NICNSCI_STB
      AnimationMode       = ONCE
      TransitionKey       = TRANS_StandDamaged
      WaitForStateToFinishIfPossible = Trans_Taunting_Damaged
    End

    ; ------- Machine Gun Animations

    ConditionState      = USING_WEAPON_A
      Animation         = NICNSCI_SKL.NICNSCI_ATA
      AnimationMode     = LOOP
      TransitionKey     = TRANS_Firing
      WaitForStateToFinishIfPossible = NADA
    End

    ConditionState      = USING_WEAPON_A REALLYDAMAGED
      Animation         = NICNSCI_SKL.NICNSCI_ATC
      AnimationMode     = LOOP
      TransitionKey     = TRANS_FiringDamaged
      WaitForStateToFinishIfPossible = NADA
    End

    ConditionState      = MOVING USING_WEAPON_A ;CI07D
      Animation         = NICNSCI_SKL.NICNSCI_ATA3
      AnimationMode     = LOOP
      TransitionKey     = TRANS_Firing
      WaitForStateToFinishIfPossible = NADA
    End
    AliasConditionState = MOVING USING_WEAPON_A REALLYDAMAGED

    ConditionState      = USING_WEAPON_B
      Animation         = NICNSCI_SKL.NICNSCI_ATA2
      AnimationMode     = LOOP
 ;    TransitionKey     = TRANS_Firing
      WaitForStateToFinishIfPossible = NADA
    End

    ConditionState      = USING_WEAPON_B REALLYDAMAGED
      Animation         = NICNSCI_SKL.NICNSCI_ATC2
      AnimationMode     = LOOP
 ;    TransitionKey     = TRANS_FiringDamaged
      WaitForStateToFinishIfPossible = NADA
    End

    ; ------- Firing-related Transitions

    TransitionState   = TRANS_Firing TRANS_FiringDamaged
      Animation       = NICNSCI_SKL.NICNSCI_AA2AC
      AnimationMode   = ONCE
    End

    TransitionState   = TRANS_Stand TRANS_Firing
      Animation       = NICNSCI_SKL.NICNSCI_SA2AA
      AnimationMode   = ONCE
    End

    TransitionState   = TRANS_Firing TRANS_Stand
      Animation       = NICNSCI_SKL.NICNSCI_AA2SA
      AnimationMode   = ONCE
    End

    TransitionState   = TRANS_StandDamaged TRANS_FiringDamaged
      Animation       = NICNSCI_SKL.NICNSCI_ATCST
      AnimationMode   = ONCE
    End

    TransitionState   = TRANS_FiringDamaged TRANS_StandDamaged
      Animation       = NICNSCI_SKL.NICNSCI_ATCED
      AnimationMode   = ONCE
    End


    ; ------------- Damage Transitions --------------------
    TransitionState = TRANS_StandDamaged TRANS_RunDamaged
      Animation       = NICNSCI_SKL.NICNSCI_AA2AC
      AnimationMode   = ONCE
      AnimationSpeedFactorRange = 2 2
    End
    TransitionState = TRANS_RunDamaged TRANS_StandDamaged 
      Animation       = NICNSCI_SKL.NICNSCI_AA2AC
      AnimationMode   = ONCE_BACKWARDS
      AnimationSpeedFactorRange = 2 2
      Flags           = START_FRAME_LAST
    End
    TransitionState = TRANS_Stand TRANS_StandDamaged 
      Animation       = NICNSCI_SKL.NICNSCI_AA2SA
      AnimationMode   = ONCE_BACKWARDS
      AnimationSpeedFactorRange = 4 5
      Flags           = START_FRAME_LAST
    End




    ; ------- Laying Mines Animations

    ConditionState    = PREATTACK_C ;CI07A
      Animation       = NICNSCI_SKL.NICNSCI_FDP1
      AnimationMode   = ONCE
      TransitionKey   = TRANS_Mine
      WaitForStateToFinishIfPossible = NADA
    End
    AliasConditionState = PREATTACK_C REALLYDAMAGED

    ConditionState    = FIRING_C ;CI07A
      Animation       = NICNSCI_SKL.NICNSCI_FDP2
      AnimationMode   = ONCE
      TransitionKey   = TRANS_Mine
      WaitForStateToFinishIfPossible = TRANS_Mine
      WaitForStateToFinishIfPossible = NADA
    End
    AliasConditionState = FIRING_C REALLYDAMAGED

    TransitionState = TRANS_Mine TRANS_Stand ;CI07A
      Animation = NICNSCI_SKL.NICNSCI_FDP1
      AnimationMode = ONCE_BACKWARDS
      Flags = START_FRAME_LAST
    End
    TransitionState = TRANS_Mine TRANS_StandDamaged ;CI07A
      Animation = NICNSCI_SKL.NICNSCI_FDP1
      AnimationMode = ONCE_BACKWARDS
      Flags = START_FRAME_LAST
    End

    ; ------- Parachuting Animations

    ConditionState    = FREEFALL
      Animation       = NICNSCI_SKL.NICNSCI_POP
      AnimationMode   = MANUAL
      Flags           = START_FRAME_FIRST
      TransitionKey   = TRANS_Falling
      WaitForStateToFinishIfPossible = NADA
    End
    AliasConditionState = FREEFALL REALLYDAMAGED
    AliasConditionState = FREEFALL DYING

    ConditionState    = PARACHUTING
      Animation       = NICNSCI_SKL.NICNSCI_PHG
      AnimationMode   = LOOP
      Flags           = PRISTINE_BONE_POS_IN_FINAL_FRAME  ; our bone positions should come from the last frame, rather than the first
      TransitionKey   = TRANS_Chute
      WaitForStateToFinishIfPossible = NADA
    End
    AliasConditionState = PARACHUTING REALLYDAMAGED
    AliasConditionState = PARACHUTING DYING

    TransitionState   = TRANS_Falling TRANS_Chute
      Animation       = NICNSCI_SKL.NICNSCI_POP
      AnimationMode   = ONCE
      Flags           = PRISTINE_BONE_POS_IN_FINAL_FRAME  ; our bone positions should come from the last frame, rather than the first
    End

    TransitionState   = TRANS_Chute TRANS_Stand
      Animation       = NICNSCI_SKL.NICNSCI_PTD
      AnimationMode   = ONCE
    End

    ; ------- Movement Animations

    ConditionState      = MOVING
      Animation         = NICNSCI_SKL.NICNSCI_RNA 26
      Animation         = NICNSCI_SKL.NICNSCI_RNA2 13 ;CI07C
      Animation         = NICNSCI_SKL.NICNSCI_RNA3 26
      Animation         = NICNSCI_SKL.NICNSCI_RNA4 13
      AnimationMode     = LOOP
      Flags             = RANDOMSTART
      TransitionKey     = None
      ParticleSysBone   = None InfantryDustTrails
      WaitForStateToFinishIfPossible = NADA
    End
    AliasConditionState = MOVING ATTACKING

    ConditionState = MOVING REALLYDAMAGED
      Animation         = NICNSCI_SKL.NICNSCI_RNB 28
      AnimationMode     = LOOP
      Flags             = RANDOMSTART
      TransitionKey     = TRANS_RunDamaged
      TransitionKey     = None
      WaitForStateToFinishIfPossible = NADA
    End
    AliasConditionState = MOVING ATTACKING REALLYDAMAGED

    ; ------- Bldg-capture

    ConditionState      = UNPACKING
      Model             = NICNSCSWG_F
      Animation         = NICNSC_F_SKL.NICNSC_F_FDP1
      AnimationMode     = ONCE
      WaitForStateToFinishIfPossible = NADA
    End
    AliasConditionState = UNPACKING REALLYDAMAGED

    ConditionState      = RAISING_FLAG
      Model             = NICNSCSWG_F
      Animation         = NICNSC_F_SKL.NICNSC_F_FDP2
      AnimationMode     = ONCE
      TransitionKey     = TRANS_Raising
      WaitForStateToFinishIfPossible = NADA
    End
    AliasConditionState = RAISING_FLAG REALLYDAMAGED

    ConditionState      = PACKING
      Model             = NICNSCSWG_F
      Animation         = NICNSC_F_SKL.NICNSC_F_FDP1
      AnimationMode     = ONCE_BACKWARDS
      Flags             = START_FRAME_LAST
      TransitionKey     = TRANS_Packing
      WaitForStateToFinishIfPossible = NADA
    End
    AliasConditionState = PACKING REALLYDAMAGED

    TransitionState     = TRANS_Raising TRANS_Packing
      Model             = NICNSCSWG_F
      Animation         = NICNSC_F_SKL.NICNSC_F_FDP2
      AnimationMode     = ONCE_BACKWARDS
      Flags             = START_FRAME_LAST
    End

    ; ------- Dying Animations

    ConditionState      = DYING
      Animation         = NICNSCI_SKL.NICNSCI_DTA
      Animation         = NICNSCI_SKL.NICNSCI_DTB
      Animation         = NICNSCI_SKL.NICNSCI_DTC
      Animation         = NICNSCI_SKL.NICNSCI_DTD
      Animation         = NICNSCI_SKL.NICNSCI_DTE
      Animation         = NICNSCI_SKL.NICNSCI_DTF
      AnimationMode     = ONCE
      TransitionKey     = TRANS_Dying
      WaitForStateToFinishIfPossible = NADA
    End

    TransitionState     = TRANS_Dying TRANS_Flailing
      Animation         = NICNSCI_SKL.NICNSCI_ATDE1
      AnimationMode     = ONCE
    End

    ConditionState      = DYING EXPLODED_FLAILING
      Animation         = NICNSCI_SKL.NICNSCI_ATDE2
      AnimationMode     = LOOP
      TransitionKey     = TRANS_Flailing
      WaitForStateToFinishIfPossible = NADA
    End

    ConditionState      = DYING EXPLODED_BOUNCING
      Animation         = NICNSCI_SKL.NICNSCI_ATDE3
      AnimationMode     = ONCE
      TransitionKey     = None
      WaitForStateToFinishIfPossible = NADA
    End

    ; ------- Cheering

    ConditionState      = SPECIAL_CHEERING
      Animation         = NICNSCI_SKL.NICNSCI_CHA
      AnimationMode     = LOOP
      WaitForStateToFinishIfPossible = NADA
    End

    ConditionState      = SPECIAL_CHEERING REALLYDAMAGED
      Animation         = NICNSCI_SKL.NICNSCI_CHA
      AnimationMode     = LOOP
      WaitForStateToFinishIfPossible = NADA
    End

    ; ------- Taunting

    ConditionState      = ACTIVELY_CONSTRUCTING
      Animation         = NICNSCI_SKL.NICNSCI_CHA
      AnimationMode     = LOOP
      Flags             = RANDOMSTART
      TransitionKey     = Trans_Taunting
      WaitForStateToFinishIfPossible = NADA
    End

    ConditionState      = ACTIVELY_CONSTRUCTING REALLYDAMAGED
      Animation         = NICNSCI_SKL.NICNSCI_CHA
      AnimationMode     = LOOP
      Flags             = RANDOMSTART
      TransitionKey     = Trans_Taunting_Damaged
      WaitForStateToFinishIfPossible = NADA
    End

  End

  ; ***DESIGN parameters ***
  DisplayName         = OBJECT:MGRedguard
  Side                = ChinaSpecialWeaponsGeneral
  EditorSorting       = INFANTRY
  TransportSlotCount  = 1                 ;how many "slots" we take in a transport (0 == not transportable)
  WeaponSet
    Conditions = None 
    Weapon = PRIMARY MGRedGuardCombatRifle
  End
  ArmorSet
    Conditions      = None
    Armor           = HumanArmor
    DamageFX        = InfantryDamageFX
  End
  VisionRange = 100
  ShroudClearingRange = 200
  Prerequisites
    Object = Spec_ChinaBarracks
  End
  BuildCost     = 325 ;300
  BuildTime     = 10.0          ;in seconds      

  ExperienceValue = 5 5 10 20   ;Experience point value at each level
  ExperienceRequired = 0 20 40 80  ;Experience points needed to gain each level
  IsTrainable = Yes             ;Can gain experience
  CrushableLevel         = 0  ;What am I?:        0 = for infantry, 1 = for trees, 2 = general vehicles
  CommandSet    = Spec_ChinaInfantryRedguardCommandSet

  ; *** AUDIO Parameters ***
  VoiceSelect = MachineGunRedGuardVoiceSelect
  VoiceMove = RedGuardVoiceMove
  VoiceGuard = RedGuardVoiceMove
  VoiceAttack = RedGuardVoiceAttack
  VoiceGroupSelect = BattleCrySound
  VoiceFear = RedGuardVoiceFear
  VoiceTaskComplete = RedGuardVoiceCaptureComplete
  UnitSpecificSounds
    VoiceMelee      = RedGuardVoiceAttackBayonet
    VoiceGarrison   = RedGuardVoiceGarrison
    VoiceCreate     = RedGuardVoiceCreate
    VoiceSubdue     = RedGuardVoiceSubdue
    VoiceEnter      = RedGuardVoiceMove
    VoiceEnterHostile = RedGuardVoiceMove
    VoiceGetHealed      = RedGuardVoiceMove
  End

  ; *** ENGINEERING Parameters ***
  RadarPriority = UNIT
  KindOf = PRELOAD SELECTABLE CAN_ATTACK ATTACK_NEEDS_LINE_OF_SIGHT CAN_CAST_REFLECTIONS INFANTRY SCORE PARACHUTABLE

  Body = ActiveBody ModuleTag_02
    MaxHealth       = 120.0
    InitialHealth   = 120.0
  End

  Behavior = VeterancyGainCreate ModuleTag_03
    StartingLevel = VETERAN
    ScienceRequired = Spec_SCIENCE_RedGuardTraining
  End

  Behavior = AIUpdateInterface ModuleTag_04
    AutoAcquireEnemiesWhenIdle = Yes
  End

  Behavior = CommandButtonHuntUpdate  ModuleTag_05 ; allows use of command button hunt script with this unit. 
  End

  Locomotor = SET_NORMAL RedguardLocomotor

  Behavior = HordeUpdate ModuleTag_06
    RubOffRadius = 60    ; if I am this close to a real hordesman, I will get to be an honorary hordesman
    UpdateRate = 1000    ; how often to recheck horde status (msec)
    Radius = 30          ; how close other units must be to us to count towards our horde-ness (~30 feet or so)
    KindOf = INFANTRY    ; what KindOf's must match to count towards horde-ness
    AlliesOnly = Yes     ; do we only count allies towards horde status? 
    ExactMatch = No      ; do we only count units of our exact same type towards horde status? (overrides kindof)
    Count = 5            ; how many units must be within Radius to grant us horde-ness
    Action = HORDE       ; when horde-ing, grant us the HORDE bonus
  End
  Behavior = PhysicsBehavior ModuleTag_07
    Mass = 5.0
  End

  Behavior = SquishCollide ModuleTag_10
    ;nothing
  End

; --- begin Death modules ---
  Behavior = SlowDeathBehavior ModuleTag_Death01
    DeathTypes          = ALL -CRUSHED -SPLATTED -EXPLODED -BURNED -POISONED -POISONED_BETA -POISONED_GAMMA -EXTRA_2 -EXTRA_3 -EXTRA_4 -EXTRA_5 -EXTRA_6 -EXTRA_7 -EXTRA_8
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_RedGuardDie
  End
  Behavior = SlowDeathBehavior ModuleTag_Death02
    DeathTypes          = NONE +CRUSHED +SPLATTED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_GIDieCrushed
  End
  Behavior = SlowDeathBehavior ModuleTag_Death03
    DeathTypes          = NONE +EXPLODED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_RedGuardDie
    FlingForce          = 8
    FlingForceVariance  = 3
    FlingPitch          = 60
    FlingPitchVariance  = 10
  End
  Behavior = SlowDeathBehavior ModuleTag_Death04
    DeathTypes          = NONE +BURNED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByFireChina
    OCL                 = INITIAL OCL_FlamingInfantry
  End
  Behavior = SlowDeathBehavior ModuleTag_Death05
    DeathTypes          = NONE +POISONED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantry
  End
  Behavior = SlowDeathBehavior ModuleTag_Death06 ; don't forget to give it a new, unique module tag
    DeathTypes          = NONE +POISONED_BETA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantryBeta ;you'll have to create this OCL and make it use the blue guys instead of green ones
  End

  Behavior = SlowDeathBehavior ModuleTag_Death07
    DeathTypes          = NONE +POISONED_GAMMA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantryGamma
  End
   Behavior = SlowDeathBehavior ModuleTag_Death08 ;new and shiney microwave death effect
    DeathTypes          = NONE +EXTRA_2
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByFireChina
    OCL                 = INITIAL OCL_MicrowavedInfantry 
  End
  Behavior = SlowDeathBehavior ModuleTag_Death09
    DeathTypes          = NONE +EXTRA_3
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByFireChina
    FX                  = FINAL   FX_IfantryTeslaDie
    OCL                 = INITIAL OCL_TeslaDeathInfantry    
  End
  Behavior = SlowDeathBehavior ModuleTag_Death045 ;Brutal kill with lots of blood and no death scream
    DeathTypes          = NONE +EXTRA_4
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    OCL                 = INITIAL OCL_BrutalBloodyDeathBits
    FX                  = INITIAL FX_InfantryGoreExplosion
  End
  Behavior = SlowDeathBehavior ModuleTag_036 ;Gore death explosion
    DeathTypes          = NONE +EXTRA_5
    ProbabilityModifier = 30
    DestructionDelay    = 0
    OCL                 = INITIAL OCL_BloodyGoreExplosion
    FX                  = FINAL   FX_InfantryGoreExplosion
  End
  Behavior = SlowDeathBehavior ModuleTag_Death0323
    DeathTypes          = NONE +EXTRA_5
    ProbabilityModifier = 70
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_RedGuardDie
    OCL                 = INITIAL OCL_BrutalBloodyDeathBits
    FlingForce          = 8
    FlingForceVariance  = 3
    FlingPitch          = 60
    FlingPitchVariance  = 10
  End
  Behavior = SlowDeathBehavior ModuleTag_03241156 ;Radiation Melt
    DeathTypes          = NONE +EXTRA_6
    DestructionDelay    = 0
    OCL                 = INITIAL OCL_RadiationDeathInfantry
    FX                  = INITIAL FX_GIDieRadiation
    FX                  = FINAL   FX_DieByToxinChina
  End
  Behavior = SlowDeathBehavior ModuleTag_0323241156 ;Radiation Melt
    DeathTypes          = NONE +EXTRA_7
    DestructionDelay    = 0
    OCL                 = INITIAL OCL_NeutronRadiationDeathInfantry
    FX                  = INITIAL FX_GIDieVirus
    FX                  = FINAL   FX_DieByToxinChina
  End
; --- end Death modules ---

  Behavior = PoisonedBehavior ModuleTag_15
    PoisonDamageInterval = 100  ; Every this many msec I will retake the poison damage dealt me...
    PoisonDuration = 3000       ; ... for this long after last hit by poison damage
  End

  Behavior = SpecialAbility ModuleTag_16
    SpecialPowerTemplate      = SpecialAbilityRedGuardCaptureBuilding
    UpdateModuleStartsAttack  = Yes
    StartsPaused              = Yes
    InitiateSound         = RedGuardVoiceCapture
  End
  Behavior = SpecialAbilityUpdate ModuleTag_17
    SpecialPowerTemplate  = SpecialAbilityRedGuardCaptureBuilding
    StartAbilityRange  = 5.0
    UnpackTime            = 3000  ; (changing this will scale anim speed)
    PreparationTime       = 20000 ; time to complete hack once prepared (changing this will scale anim speed)
    PackTime              = 2000  ; (changing this will scale anim speed)
    DoCaptureFX           = Yes
    AwardXPForTriggering  = 4
    ;SkillPointsForTriggering = ???  -- Dustin, fill me out if you want different balance values.
  End

  Behavior = UnpauseSpecialPowerUpgrade ModuleTag_18
    SpecialPowerTemplate = SpecialAbilityRedGuardCaptureBuilding
    TriggeredBy = Upgrade_InfantryCaptureBuilding
  End
  
  Behavior = ProductionUpdate ModuleTag_Taunt01
  End
  
  Behavior = ObjectCreationUpgrade ModuleTag_Taunt02
    UpgradeObject = OCL_RedGuardTauntObject
    TriggeredBy   = Upgrade_GLAWorkerFakeCommandSet
  End

  Geometry = CYLINDER
  GeometryMajorRadius = 7.0
  GeometryMinorRadius = 7.0
  GeometryHeight = 12.0
  GeometryIsSmall = Yes
  Shadow = SHADOW_DECAL
  ShadowSizeX = 14;
  ShadowSizeY = 14;
  ShadowTexture = ShadowI;
  BuildCompletion = APPEARS_AT_RALLY_POINT

End