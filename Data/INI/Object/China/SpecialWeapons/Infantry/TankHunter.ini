Object Spec_ChinaInfantryTankHunter

  ; *** ART Parameters ***
  SelectPortrait         = SNGrenTankHunter_L
  ButtonImage            = SNGrenTankHunter
  
  UpgradeCameo1 = Upgrade_Nationalism
  ;UpgradeCameo2 = NONE
  ;UpgradeCameo3 = NONE
  ;UpgradeCameo4 = NONE
  ;UpgradeCameo5 = NONE

  Draw = W3DModelDraw ModuleTag_01

    OkToChangeModelColor = Yes

    ; this says "we don't use these condition states at all, so completely
    ; ignore them for purposes of matchmaking"... this is useful to help
    ; reduce the number of AliasConditionState clauses you must add in
    ; order to avoid ambiguity in some cases.
    IgnoreConditionStates = PREATTACK_A FIRING_A BETWEEN_FIRING_SHOTS_A RELOADING_A

    ; --- Idle
    DefaultConditionState
      Model             = NIMSSTSWG_SKN
      IdleAnimation     = AIRngr_SKL.AIRngr_STA 0 35
      IdleAnimation     = AIRngr_SKL.AIRngr_IDA
      IdleAnimation     = AIRngr_SKL.AIRngr_IDB
      AnimationMode     = ONCE
      WeaponFireFXBone  = PRIMARY Muzzle
      WeaponMuzzleFlash = PRIMARY MuzzleFX
      WeaponLaunchBone  = PRIMARY Muzzle
      WeaponFireFXBone  = SECONDARY Muzzle
      WeaponLaunchBone  = SECONDARY Muzzle
      WeaponLaunchBone  = SECONDARY Muzzle
      TransitionKey     = TRANS_Stand

    End

    ConditionState      = REALLYDAMAGED
      IdleAnimation     = AIRngr_SKL.AIRngr_STB 0 35
      IdleAnimation     = AIRngr_SKL.AIRngr_IDC
      IdleAnimation     = AIRngr_SKL.AIRngr_IDD
      AnimationMode     = ONCE
      TransitionKey     = TRANS_StandInjured
    End

    TransitionState     = TRANS_Stand TRANS_StandInjured
      Animation         = AIRngr_SKL.AIRngr_SA2SB
      AnimationMode     = ONCE
    End

    ; --- attacking (Machine Gun)
    ConditionState      = USING_WEAPON_A
      Animation         = AIRngr_SKL.AIRngr_ATA
      AnimationMode     = LOOP
      TransitionKey     = TRANS_FiringA
    End

    ConditionState      = USING_WEAPON_A REALLYDAMAGED
      Animation         = AIRngr_SKL.AIRngr_ATA2
      AnimationMode     = LOOP
      TransitionKey     = TRANS_FiringAInjured
    End

    TransitionState     = TRANS_FiringA TRANS_FiringAInjured
      Animation         = AIRngr_SKL.AIRngr_A2WAA
      AnimationMode     = ONCE
    End

    TransitionState     = TRANS_Stand TRANS_FiringA
      Animation         = AIRngr_SKL.AIRngr_ATAST
      AnimationMode     = ONCE
      AnimationSpeedFactorRange = 4 4
    End

    TransitionState     = TRANS_FiringA TRANS_Stand
      Animation         = AIRngr_SKL.AIRngr_ATAED
      AnimationMode     = ONCE
      AnimationSpeedFactorRange = 4 4
    End

    TransitionState     = TRANS_StandInjured TRANS_FiringAInjured
      Animation         = AIRngr_SKL.AIRngr_S2WAA
      AnimationMode     = ONCE
      AnimationSpeedFactorRange = 4 4
    End

    TransitionState     = TRANS_FiringAInjured TRANS_StandInjured
      Animation         = AIRngr_SKL.AIRngr_WAA2S
      AnimationMode     = ONCE
      AnimationSpeedFactorRange = 4 4
    End
    
    TransitionState     = TRANS_Stand TRANS_Move
      Animation         = AIRngr_SKL.AIRngr_STA2RNA
      AnimationMode     = ONCE
    End

    ; --- attacking (Grenade Launcher)
    ConditionState      = PREATTACK_B 
      Animation         = AIRngr_SKL.AIRngr_ATBA
      AnimationMode     = ONCE
      TransitionKey     = TRANS_FiringB
    End
    AliasConditionState = PREATTACK_B MOVING
    AliasConditionState = PREATTACK_B FIRING_B
    AliasConditionState = PREATTACK_B BETWEEN_FIRING_SHOTS_B

    ConditionState      = FIRING_B
      Animation         = AIRngr_SKL.AIRngr_ATBB
      AnimationMode     = ONCE
      TransitionKey     = TRANS_FiringB
    End

    ConditionState      = BETWEEN_FIRING_SHOTS_B
      Animation         = AIRngr_SKL.AIRngr_ATBB
      AnimationMode     = MANUAL
      Flags             = START_FRAME_LAST
      TransitionKey     = TRANS_FiringB
      WaitForStateToFinishIfPossible = TRANS_FiringB
    End
    AliasConditionState = RELOADING_B

    TransitionState     = TRANS_Stand TRANS_FiringB
      Animation         = AIRngr_SKL.AIRngr_ATBST1
      AnimationMode     = ONCE
    End

    TransitionState     = TRANS_FiringB TRANS_Stand
      Animation         = AIRngr_SKL.AIRngr_ATBST2
      AnimationMode     = ONCE
    End

    ConditionState      = PREATTACK_B REALLYDAMAGED
      Animation         = AIRngr_SKL.AIRngr_ATB2A
      AnimationMode     = ONCE
      TransitionKey     = TRANS_FiringBInjured
    End
    AliasConditionState = PREATTACK_B MOVING REALLYDAMAGED
    AliasConditionState = PREATTACK_B FIRING_B REALLYDAMAGED
    AliasConditionState = PREATTACK_B BETWEEN_FIRING_SHOTS_B REALLYDAMAGED

    ConditionState      = FIRING_B REALLYDAMAGED
      Animation         = AIRngr_SKL.AIRngr_ATB2B
      AnimationMode     = ONCE
      TransitionKey     = TRANS_FiringBInjured
    End

    ConditionState      = BETWEEN_FIRING_SHOTS_B REALLYDAMAGED
      Animation         = AIRngr_SKL.AIRngr_ATB2B
      AnimationMode     = MANUAL
      Flags             = START_FRAME_LAST
      TransitionKey     = TRANS_FiringBInjured
      WaitForStateToFinishIfPossible = TRANS_FiringBInjured
    End
    AliasConditionState = RELOADING_B REALLYDAMAGED

    TransitionState     = TRANS_StandInjured TRANS_FiringBInjured
      Animation         = AIRngr_SKL.AIRngr_ATB2ST1
      AnimationMode     = ONCE
    End

    TransitionState     = TRANS_FiringBInjured TRANS_StandInjured
      Animation         = AIRngr_SKL.AIRngr_ATB2ST2
      AnimationMode     = ONCE
    End

    ; -- cross-attack transitions

    TransitionState     = TRANS_FiringA TRANS_FiringB
      Animation         = AIRngr_SKL.AIRngr_ATA2AB
      AnimationMode     = ONCE
      AnimationSpeedFactorRange = 4 4
    End

    TransitionState     = TRANS_FiringB TRANS_FiringA
      Animation         = AIRngr_SKL.AIRngr_ATA2AB
      AnimationMode     = ONCE_BACKWARDS
      AnimationSpeedFactorRange = 4 4
    End


    ; --- moving
    ConditionState      = MOVING
      Animation         = AIRngr_SKL.AIRngr_RNA 30
      AnimationMode     = LOOP
      Flags             = RANDOMSTART
      TransitionKey     = TRANS_Move
      ParticleSysBone   = None InfantryDustTrails
    End
    AliasConditionState = MOVING ATTACKING

    ConditionState      = MOVING REALLYDAMAGED
      Animation         = AIRngr_SKL.AIRngr_RNB 30
      AnimationMode     = LOOP
      Flags             = RANDOMSTART
      TransitionKey     = TRANS_Move
    End
    AliasConditionState = MOVING REALLYDAMAGED ATTACKING
    
    ; --- dying anims
    ConditionState      = DYING
      Animation         = AIRngr_SKL.AIRngr_DTA
      Animation         = AIRngr_SKL.AIRngr_DTB
      AnimationMode     = ONCE
      TransitionKey     = None
    End

    TransitionState     = TRANS_Dying TRANS_Flailing
      Animation         = AIRngr_SKL.AIRngr_ADTF1
      AnimationMode     = ONCE
    End

    ConditionState      = DYING EXPLODED_FLAILING
      Animation         = AIRngr_SKL.AIRngr_ADTF2
      AnimationMode     = LOOP
      TransitionKey     = TRANS_Flailing
    End

    ConditionState      = DYING EXPLODED_BOUNCING
      Animation         = AIRngr_SKL.AIRngr_ADTF3
      AnimationMode     = ONCE
      TransitionKey     = None
    End
    AliasConditionState = DYING SPLATTED

    ; --- cheering
    ConditionState      = SPECIAL_CHEERING
      Animation         = AIRngr_SKL.AIRngr_CHA
      AnimationMode     = LOOP
    End

    ConditionState      = SPECIAL_CHEERING REALLYDAMAGED
      Animation         = AIRngr_SKL.AIRngr_CHB
      AnimationMode     = LOOP
    End

    ; ----- PARACHUTING ANIMATIONS
    ConditionState      = FREEFALL
      Animation         = AIRngr_SKL.AIRngr_PFL
      AnimationMode     = LOOP
      TransitionKey     = TRANS_Falling
    End
    AliasConditionState = FREEFALL REALLYDAMAGED
    AliasConditionState = FREEFALL DYING
    ConditionState      = PARACHUTING
      Animation         = AIRngr_SKL.AIRngr_PHG
      AnimationMode     = LOOP
      Flags             = PRISTINE_BONE_POS_IN_FINAL_FRAME  ; our bone positions should come from the last frame, rather than the first
      TransitionKey     = TRANS_Chute
    End
    AliasConditionState = PARACHUTING REALLYDAMAGED
    AliasConditionState = PARACHUTING DYING
    TransitionState     = TRANS_Falling TRANS_Chute
      Animation         = AIRngr_SKL.AIRngr_POP
      AnimationMode     = ONCE
      Flags             = PRISTINE_BONE_POS_IN_FINAL_FRAME  ; our bone positions should come from the last frame, rather than the first
    End
    TransitionState     = TRANS_Chute TRANS_Stand
      Animation         = AIRngr_SKL.AIRngr_PTD
      AnimationMode     = ONCE
    End
    TransitionState     = TRANS_Chute TRANS_StandInjured
      Animation         = AIRngr_SKL.AIRngr_PTD
      AnimationMode     = ONCE
    End

    ; --- RAPPELLING ANIMATIONS
    ConditionState      = RAPPELLING
      Animation         = AIRngr_SKL.AIRngr_RPL1 ;30
      AnimationMode     = LOOP
      Flags             = RANDOMSTART
      TransitionKey     = TRANS_Rappelling
    End
    AliasConditionState = MOVING RAPPELLING

    TransitionState     = TRANS_Rappelling TRANS_Stand
      Animation         = AIRngr_SKL.AIRngr_RPL2
      AnimationMode     = ONCE
    End

    TransitionState     = TRANS_Rappelling TRANS_StandInjured
      Animation         = AIRngr_SKL.AIRngr_RPL2
      AnimationMode     = ONCE
    End

  End


  ; ***DESIGN parameters ***
  DisplayName      = OBJECT:GrenadierTankHunter
  Side = ChinaSpecialWeaponsGeneral
  EditorSorting = INFANTRY
  TransportSlotCount = 1                 ;how many "slots" we take in a transport (0 == not transportable)
  WeaponSet
    Conditions = None 
    Weapon = PRIMARY ChinaInfantryTankHunterGrenadeLauncher
    Weapon = SECONDARY ChinaInfantryTankHunterFlareGrenade
    AutoChooseSources = SECONDARY NONE
  End
  ArmorSet
    Conditions      = None
    Armor           = HumanArmor
    DamageFX        = InfantryDamageFX
  End
  VisionRange = 150
  ShroudClearingRange = 400
  Prerequisites
    Object = Spec_ChinaBarracks
  End
  BuildCost = 300
  BuildTime = 5.0          ;in seconds    

  ExperienceValue = 20 20 40 60    ;Experience point value at each level
  ExperienceRequired = 0 100 200 400  ;Experience points needed to gain each level
  IsTrainable = Yes             ;Can gain experience
  CrushableLevel         = 0  ;What am I?:        0 = for infantry, 1 = for trees, 2 = general vehicles
  CommandSet      = Spec_ChinaInfantryTankHunterCommandSet

  ; *** AUDIO Parameters ***
  VoiceSelect = GrenadeTankHunterVoiceSelect
  VoiceMove = TankHunterVoiceMove
  VoiceAttack = TankHunterVoiceAttack
  VoiceAttackAir = TankHunterVoiceAttack
  VoiceGuard = TankHunterVoiceMove
  VoiceFear = TankHunterVoiceFear
  UnitSpecificSounds
    VoiceCreate          = TankHunterVoiceCreate
    VoiceGarrison = TankHunterVoiceGarrison
    VoiceEnter = TankHunterVoiceMove
    VoiceEnterHostile = TankHunterVoiceMove
    VoiceGetHealed      = TankHunterVoiceMove
  End

  ; *** ENGINEERING Parameters ***
  RadarPriority = UNIT
  KindOf = PRELOAD SELECTABLE CAN_ATTACK ATTACK_NEEDS_LINE_OF_SIGHT CAN_CAST_REFLECTIONS INFANTRY SCORE

  Body = ActiveBody ModuleTag_02
    MaxHealth       = 100.0
    InitialHealth   = 100.0
  End

  Behavior = AIUpdateInterface ModuleTag_03
    AutoAcquireEnemiesWhenIdle = Yes
  End
  Locomotor = SET_NORMAL MissileDefenderLocomotor
  Behavior = HordeUpdate ModuleTag_04
    UpdateRate = 1000    ; how often to recheck horde status (msec)
    RubOffRadius = 60    ; if I am this close to a real hordesman, I will get to be an honorary hordesman
    Radius = 30          ; how close other units must be to us to count towards our horde-ness (~30 feet or so)
    KindOf = INFANTRY    ; what KindOf's must match to count towards horde-ness
    AlliesOnly = Yes     ; do we only count allies towards horde status? 
    ExactMatch = No      ; do we only count units of our exact same type towards horde status? (overrides kindof)
    Count = 5            ; how many units must be within Radius to grant us horde-ness
    Action = HORDE       ; when horde-ing, grant us the HORDE bonus
  End
  Behavior = PhysicsBehavior ModuleTag_05
    Mass = 5.0
  End

  Behavior = SpecialAbility ModuleTag_07
    SpecialPowerTemplate = SpecialAbilityTankHunterTNTAttack
    UpdateModuleStartsAttack = Yes
    InitiateSound = TankHunterVoiceTNT
  End
  Behavior = SpecialAbilityUpdate ModuleTag_08
    SpecialPowerTemplate = SpecialAbilityTankHunterTNTAttack
    StartAbilityRange = 5.0
    PreparationTime = 0
    SpecialObject = TNTStickyBomb
    MaxSpecialObjects = 8
    SpecialObjectsPersistWhenOwnerDies = Yes ;Charges are removed instantly when owner dies (nobody can detonate).
    SpecialObjectsPersistent = Yes           ;Charges are persistent till lifetime expires or owner detonates them.
    UniqueSpecialObjectTargets = Yes         ;This prevents multiple charges placed on the same object.
    FleeRangeAfterCompletion = 100.0         ;Runs away after finishing ability
  End

  Behavior = VeterancyGainCreate ModuleTag_Vet01
    StartingLevel = VETERAN
    ScienceRequired = Spec_SCIENCE_RedGuardTraining
  End
  
  Behavior = SquishCollide ModuleTag_09
    ;nothing
  End


; --- begin Death modules ---
  Behavior = SlowDeathBehavior ModuleTag_Death01
    DeathTypes          = ALL -CRUSHED -SPLATTED -EXPLODED -BURNED -POISONED -POISONED_BETA -POISONED_GAMMA -EXTRA_2 -EXTRA_3 -EXTRA_4 -EXTRA_5 -EXTRA_6 -EXTRA_7 -EXTRA_8
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_TankHunterDie
  End
  Behavior = SlowDeathBehavior ModuleTag_Death02
    DeathTypes          = NONE +CRUSHED +SPLATTED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_GIDieCrushed
  End
  Behavior = SlowDeathBehavior ModuleTag_Death03
    DeathTypes          = NONE +EXPLODED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_TankHunterDie
    FlingForce          = 8
    FlingForceVariance  = 3
    FlingPitch          = 60
    FlingPitchVariance  = 10
  End
  Behavior = SlowDeathBehavior ModuleTag_Death04
    DeathTypes          = NONE +BURNED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByFireChina
    OCL                 = INITIAL OCL_FlamingInfantry
  End
  Behavior = SlowDeathBehavior ModuleTag_Death05
    DeathTypes          = NONE +POISONED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantry
  End
  Behavior = SlowDeathBehavior ModuleTag_Death06 ; don't forget to give it a new, unique module tag
    DeathTypes          = NONE +POISONED_BETA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantryBeta ;you'll have to create this OCL and make it use the blue guys instead of green ones
  End

  Behavior = SlowDeathBehavior ModuleTag_Death07
    DeathTypes          = NONE +POISONED_GAMMA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantryGamma
  End
  Behavior = SlowDeathBehavior ModuleTag_Death08 ;new and shiney microwave death effect
    DeathTypes          = NONE +EXTRA_2
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByFireChina
    OCL                 = INITIAL OCL_MicrowavedInfantry 
  End
  Behavior = SlowDeathBehavior ModuleTag_Death09
    DeathTypes          = NONE +EXTRA_3
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByFireChina
    FX                  = FINAL   FX_IfantryTeslaDie
    OCL                 = INITIAL OCL_TeslaDeathInfantry    
  End
  Behavior = SlowDeathBehavior ModuleTag_Death045 ;Brutal kill with lots of blood and no death scream
    DeathTypes          = NONE +EXTRA_4
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    OCL                 = INITIAL OCL_BrutalBloodyDeathBits
    FX                  = INITIAL FX_InfantryGoreExplosion
  End
  Behavior = SlowDeathBehavior ModuleTag_036 ;Gore death explosion
    DeathTypes          = NONE +EXTRA_5
    ProbabilityModifier = 30
    DestructionDelay    = 0
    OCL                 = INITIAL OCL_BloodyGoreExplosion
    FX                  = FINAL   FX_InfantryGoreExplosion
  End
  Behavior = SlowDeathBehavior ModuleTag_Death0323
    DeathTypes          = NONE +EXTRA_5
    ProbabilityModifier = 70
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_TankHunterDie
    OCL                 = INITIAL OCL_BrutalBloodyDeathBits
    FlingForce          = 8
    FlingForceVariance  = 3
    FlingPitch          = 60
    FlingPitchVariance  = 10
  End
  Behavior = SlowDeathBehavior ModuleTag_03241156 ;Radiation Melt
    DeathTypes          = NONE +EXTRA_6
    DestructionDelay    = 0
    OCL                 = INITIAL OCL_RadiationDeathInfantry
    FX                  = INITIAL FX_GIDieRadiation
    FX                  = FINAL   FX_DieByToxinChina
  End
  Behavior = SlowDeathBehavior ModuleTag_0323241156 ;Radiation Melt
    DeathTypes          = NONE +EXTRA_7
    DestructionDelay    = 0
    OCL                 = INITIAL OCL_NeutronRadiationDeathInfantry
    FX                  = INITIAL FX_GIDieVirus
    FX                  = FINAL   FX_DieByToxinChina
  End
; --- end Death modules ---

  Behavior = PoisonedBehavior ModuleTag_12
    PoisonDamageInterval = 100  ; Every this many msec I will retake the poison damage dealt me...
    PoisonDuration = 3000       ; ... for this long after last hit by poison damage
  End
 
  Geometry = CYLINDER
  GeometryMajorRadius = 10.0
  GeometryMinorRadius = 10.0
  GeometryHeight = 12.0
  GeometryIsSmall = Yes
  Shadow = SHADOW_DECAL
  ShadowSizeX = 14;
  ShadowSizeY = 14;
  ShadowTexture = ShadowI;
  BuildCompletion = APPEARS_AT_RALLY_POINT

End